// source: pb/rvapi/rvapi.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.rvapi.CheckInRequest', null, global);
goog.exportSymbol('proto.rvapi.CheckInResponse', null, global);
goog.exportSymbol('proto.rvapi.CreateRequest', null, global);
goog.exportSymbol('proto.rvapi.CreateResponse', null, global);
goog.exportSymbol('proto.rvapi.Election', null, global);
goog.exportSymbol('proto.rvapi.Election.Flag', null, global);
goog.exportSymbol('proto.rvapi.ElectionView', null, global);
goog.exportSymbol('proto.rvapi.GetRequest', null, global);
goog.exportSymbol('proto.rvapi.GetResponse', null, global);
goog.exportSymbol('proto.rvapi.GetViewRequest', null, global);
goog.exportSymbol('proto.rvapi.GetViewResponse', null, global);
goog.exportSymbol('proto.rvapi.ModifyFlags', null, global);
goog.exportSymbol('proto.rvapi.OverviewRequest', null, global);
goog.exportSymbol('proto.rvapi.OverviewResponse', null, global);
goog.exportSymbol('proto.rvapi.RemainingVote', null, global);
goog.exportSymbol('proto.rvapi.Report', null, global);
goog.exportSymbol('proto.rvapi.ReportRequest', null, global);
goog.exportSymbol('proto.rvapi.ReportResponse', null, global);
goog.exportSymbol('proto.rvapi.Round', null, global);
goog.exportSymbol('proto.rvapi.SetClose', null, global);
goog.exportSymbol('proto.rvapi.UpdateRequest', null, global);
goog.exportSymbol('proto.rvapi.UpdateRequest.Operation', null, global);
goog.exportSymbol('proto.rvapi.UpdateRequest.Operation.OperationCase', null, global);
goog.exportSymbol('proto.rvapi.UpdateResponse', null, global);
goog.exportSymbol('proto.rvapi.VoteRequest', null, global);
goog.exportSymbol('proto.rvapi.VoteResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.CheckInRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rvapi.CheckInRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.CheckInRequest.displayName = 'proto.rvapi.CheckInRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.CheckInResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rvapi.CheckInResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.CheckInResponse.displayName = 'proto.rvapi.CheckInResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.ReportRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rvapi.ReportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.ReportRequest.displayName = 'proto.rvapi.ReportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.ReportResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rvapi.ReportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.ReportResponse.displayName = 'proto.rvapi.ReportResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.Report = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rvapi.Report.repeatedFields_, null);
};
goog.inherits(proto.rvapi.Report, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.Report.displayName = 'proto.rvapi.Report';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.RemainingVote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rvapi.RemainingVote.repeatedFields_, null);
};
goog.inherits(proto.rvapi.RemainingVote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.RemainingVote.displayName = 'proto.rvapi.RemainingVote';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.Round = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rvapi.Round.repeatedFields_, null);
};
goog.inherits(proto.rvapi.Round, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.Round.displayName = 'proto.rvapi.Round';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.GetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rvapi.GetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.GetRequest.displayName = 'proto.rvapi.GetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.GetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rvapi.GetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.GetResponse.displayName = 'proto.rvapi.GetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.GetViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rvapi.GetViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.GetViewRequest.displayName = 'proto.rvapi.GetViewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.GetViewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rvapi.GetViewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.GetViewResponse.displayName = 'proto.rvapi.GetViewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.OverviewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rvapi.OverviewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.OverviewRequest.displayName = 'proto.rvapi.OverviewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.OverviewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rvapi.OverviewResponse.repeatedFields_, null);
};
goog.inherits(proto.rvapi.OverviewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.OverviewResponse.displayName = 'proto.rvapi.OverviewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.CreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rvapi.CreateRequest.repeatedFields_, null);
};
goog.inherits(proto.rvapi.CreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.CreateRequest.displayName = 'proto.rvapi.CreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.CreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rvapi.CreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.CreateResponse.displayName = 'proto.rvapi.CreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.Election = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rvapi.Election.repeatedFields_, null);
};
goog.inherits(proto.rvapi.Election, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.Election.displayName = 'proto.rvapi.Election';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.ElectionView = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rvapi.ElectionView.repeatedFields_, null);
};
goog.inherits(proto.rvapi.ElectionView, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.ElectionView.displayName = 'proto.rvapi.ElectionView';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.SetClose = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rvapi.SetClose, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.SetClose.displayName = 'proto.rvapi.SetClose';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.ModifyFlags = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rvapi.ModifyFlags.repeatedFields_, null);
};
goog.inherits(proto.rvapi.ModifyFlags, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.ModifyFlags.displayName = 'proto.rvapi.ModifyFlags';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.UpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rvapi.UpdateRequest.repeatedFields_, null);
};
goog.inherits(proto.rvapi.UpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.UpdateRequest.displayName = 'proto.rvapi.UpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.UpdateRequest.Operation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rvapi.UpdateRequest.Operation.oneofGroups_);
};
goog.inherits(proto.rvapi.UpdateRequest.Operation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.UpdateRequest.Operation.displayName = 'proto.rvapi.UpdateRequest.Operation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rvapi.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.UpdateResponse.displayName = 'proto.rvapi.UpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.VoteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rvapi.VoteRequest.repeatedFields_, null);
};
goog.inherits(proto.rvapi.VoteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.VoteRequest.displayName = 'proto.rvapi.VoteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rvapi.VoteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rvapi.VoteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rvapi.VoteResponse.displayName = 'proto.rvapi.VoteResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.CheckInRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.CheckInRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.CheckInRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.CheckInRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.CheckInRequest}
 */
proto.rvapi.CheckInRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.CheckInRequest;
  return proto.rvapi.CheckInRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.CheckInRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.CheckInRequest}
 */
proto.rvapi.CheckInRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.CheckInRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.CheckInRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.CheckInRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.CheckInRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.CheckInResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.CheckInResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.CheckInResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.CheckInResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.CheckInResponse}
 */
proto.rvapi.CheckInResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.CheckInResponse;
  return proto.rvapi.CheckInResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.CheckInResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.CheckInResponse}
 */
proto.rvapi.CheckInResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.CheckInResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.CheckInResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.CheckInResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.CheckInResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.ReportRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.ReportRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.ReportRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.ReportRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ballotKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.ReportRequest}
 */
proto.rvapi.ReportRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.ReportRequest;
  return proto.rvapi.ReportRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.ReportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.ReportRequest}
 */
proto.rvapi.ReportRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBallotKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.ReportRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.ReportRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.ReportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.ReportRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBallotKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.rvapi.ReportRequest.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rvapi.ReportRequest} returns this
 */
proto.rvapi.ReportRequest.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ballot_key = 2;
 * @return {string}
 */
proto.rvapi.ReportRequest.prototype.getBallotKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rvapi.ReportRequest} returns this
 */
proto.rvapi.ReportRequest.prototype.setBallotKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.ReportResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.ReportResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.ReportResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.ReportResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    report: (f = msg.getReport()) && proto.rvapi.Report.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.ReportResponse}
 */
proto.rvapi.ReportResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.ReportResponse;
  return proto.rvapi.ReportResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.ReportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.ReportResponse}
 */
proto.rvapi.ReportResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rvapi.Report;
      reader.readMessage(value,proto.rvapi.Report.deserializeBinaryFromReader);
      msg.setReport(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.ReportResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.ReportResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.ReportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.ReportResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReport();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rvapi.Report.serializeBinaryToWriter
    );
  }
};


/**
 * optional Report report = 1;
 * @return {?proto.rvapi.Report}
 */
proto.rvapi.ReportResponse.prototype.getReport = function() {
  return /** @type{?proto.rvapi.Report} */ (
    jspb.Message.getWrapperField(this, proto.rvapi.Report, 1));
};


/**
 * @param {?proto.rvapi.Report|undefined} value
 * @return {!proto.rvapi.ReportResponse} returns this
*/
proto.rvapi.ReportResponse.prototype.setReport = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rvapi.ReportResponse} returns this
 */
proto.rvapi.ReportResponse.prototype.clearReport = function() {
  return this.setReport(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rvapi.ReportResponse.prototype.hasReport = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rvapi.Report.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.Report.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.Report.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.Report} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.Report.toObject = function(includeInstance, msg) {
  var f, obj = {
    winner: jspb.Message.getFieldWithDefault(msg, 1, ""),
    roundsList: jspb.Message.toObjectList(msg.getRoundsList(),
    proto.rvapi.Round.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.Report}
 */
proto.rvapi.Report.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.Report;
  return proto.rvapi.Report.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.Report} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.Report}
 */
proto.rvapi.Report.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWinner(value);
      break;
    case 2:
      var value = new proto.rvapi.Round;
      reader.readMessage(value,proto.rvapi.Round.deserializeBinaryFromReader);
      msg.addRounds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.Report.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.Report.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.Report} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.Report.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWinner();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRoundsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.rvapi.Round.serializeBinaryToWriter
    );
  }
};


/**
 * optional string winner = 1;
 * @return {string}
 */
proto.rvapi.Report.prototype.getWinner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rvapi.Report} returns this
 */
proto.rvapi.Report.prototype.setWinner = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Round rounds = 2;
 * @return {!Array<!proto.rvapi.Round>}
 */
proto.rvapi.Report.prototype.getRoundsList = function() {
  return /** @type{!Array<!proto.rvapi.Round>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rvapi.Round, 2));
};


/**
 * @param {!Array<!proto.rvapi.Round>} value
 * @return {!proto.rvapi.Report} returns this
*/
proto.rvapi.Report.prototype.setRoundsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.rvapi.Round=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rvapi.Round}
 */
proto.rvapi.Report.prototype.addRounds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.rvapi.Round, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.Report} returns this
 */
proto.rvapi.Report.prototype.clearRoundsList = function() {
  return this.setRoundsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rvapi.RemainingVote.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.RemainingVote.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.RemainingVote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.RemainingVote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.RemainingVote.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    choicesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.RemainingVote}
 */
proto.rvapi.RemainingVote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.RemainingVote;
  return proto.rvapi.RemainingVote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.RemainingVote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.RemainingVote}
 */
proto.rvapi.RemainingVote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addChoices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.RemainingVote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.RemainingVote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.RemainingVote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.RemainingVote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChoicesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.rvapi.RemainingVote.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rvapi.RemainingVote} returns this
 */
proto.rvapi.RemainingVote.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string choices = 2;
 * @return {!Array<string>}
 */
proto.rvapi.RemainingVote.prototype.getChoicesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rvapi.RemainingVote} returns this
 */
proto.rvapi.RemainingVote.prototype.setChoicesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rvapi.RemainingVote} returns this
 */
proto.rvapi.RemainingVote.prototype.addChoices = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.RemainingVote} returns this
 */
proto.rvapi.RemainingVote.prototype.clearChoicesList = function() {
  return this.setChoicesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rvapi.Round.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.Round.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.Round.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.Round} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.Round.toObject = function(includeInstance, msg) {
  var f, obj = {
    eliminatedList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    remainingList: jspb.Message.toObjectList(msg.getRemainingList(),
    proto.rvapi.RemainingVote.toObject, includeInstance),
    countedMap: (f = msg.getCountedMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.Round}
 */
proto.rvapi.Round.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.Round;
  return proto.rvapi.Round.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.Round} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.Round}
 */
proto.rvapi.Round.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addEliminated(value);
      break;
    case 2:
      var value = new proto.rvapi.RemainingVote;
      reader.readMessage(value,proto.rvapi.RemainingVote.deserializeBinaryFromReader);
      msg.addRemaining(value);
      break;
    case 3:
      var value = msg.getCountedMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt32, null, "", 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.Round.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.Round.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.Round} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.Round.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEliminatedList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getRemainingList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.rvapi.RemainingVote.serializeBinaryToWriter
    );
  }
  f = message.getCountedMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt32);
  }
};


/**
 * repeated string eliminated = 1;
 * @return {!Array<string>}
 */
proto.rvapi.Round.prototype.getEliminatedList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rvapi.Round} returns this
 */
proto.rvapi.Round.prototype.setEliminatedList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rvapi.Round} returns this
 */
proto.rvapi.Round.prototype.addEliminated = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.Round} returns this
 */
proto.rvapi.Round.prototype.clearEliminatedList = function() {
  return this.setEliminatedList([]);
};


/**
 * repeated RemainingVote remaining = 2;
 * @return {!Array<!proto.rvapi.RemainingVote>}
 */
proto.rvapi.Round.prototype.getRemainingList = function() {
  return /** @type{!Array<!proto.rvapi.RemainingVote>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rvapi.RemainingVote, 2));
};


/**
 * @param {!Array<!proto.rvapi.RemainingVote>} value
 * @return {!proto.rvapi.Round} returns this
*/
proto.rvapi.Round.prototype.setRemainingList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.rvapi.RemainingVote=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rvapi.RemainingVote}
 */
proto.rvapi.Round.prototype.addRemaining = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.rvapi.RemainingVote, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.Round} returns this
 */
proto.rvapi.Round.prototype.clearRemainingList = function() {
  return this.setRemainingList([]);
};


/**
 * map<string, int32> counted = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.rvapi.Round.prototype.getCountedMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.rvapi.Round} returns this
 */
proto.rvapi.Round.prototype.clearCountedMap = function() {
  this.getCountedMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.GetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.GetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.GetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.GetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.GetRequest}
 */
proto.rvapi.GetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.GetRequest;
  return proto.rvapi.GetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.GetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.GetRequest}
 */
proto.rvapi.GetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.GetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.GetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.GetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.GetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.rvapi.GetRequest.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rvapi.GetRequest} returns this
 */
proto.rvapi.GetRequest.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.GetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.GetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.GetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.GetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    election: (f = msg.getElection()) && proto.rvapi.Election.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.GetResponse}
 */
proto.rvapi.GetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.GetResponse;
  return proto.rvapi.GetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.GetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.GetResponse}
 */
proto.rvapi.GetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rvapi.Election;
      reader.readMessage(value,proto.rvapi.Election.deserializeBinaryFromReader);
      msg.setElection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.GetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.GetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.GetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.GetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rvapi.Election.serializeBinaryToWriter
    );
  }
};


/**
 * optional Election election = 1;
 * @return {?proto.rvapi.Election}
 */
proto.rvapi.GetResponse.prototype.getElection = function() {
  return /** @type{?proto.rvapi.Election} */ (
    jspb.Message.getWrapperField(this, proto.rvapi.Election, 1));
};


/**
 * @param {?proto.rvapi.Election|undefined} value
 * @return {!proto.rvapi.GetResponse} returns this
*/
proto.rvapi.GetResponse.prototype.setElection = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rvapi.GetResponse} returns this
 */
proto.rvapi.GetResponse.prototype.clearElection = function() {
  return this.setElection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rvapi.GetResponse.prototype.hasElection = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.GetViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.GetViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.GetViewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.GetViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ballotKey: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.GetViewRequest}
 */
proto.rvapi.GetViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.GetViewRequest;
  return proto.rvapi.GetViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.GetViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.GetViewRequest}
 */
proto.rvapi.GetViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBallotKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.GetViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.GetViewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.GetViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.GetViewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBallotKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ballot_key = 1;
 * @return {string}
 */
proto.rvapi.GetViewRequest.prototype.getBallotKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rvapi.GetViewRequest} returns this
 */
proto.rvapi.GetViewRequest.prototype.setBallotKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.GetViewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.GetViewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.GetViewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.GetViewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    election: (f = msg.getElection()) && proto.rvapi.ElectionView.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.GetViewResponse}
 */
proto.rvapi.GetViewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.GetViewResponse;
  return proto.rvapi.GetViewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.GetViewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.GetViewResponse}
 */
proto.rvapi.GetViewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rvapi.ElectionView;
      reader.readMessage(value,proto.rvapi.ElectionView.deserializeBinaryFromReader);
      msg.setElection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.GetViewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.GetViewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.GetViewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.GetViewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rvapi.ElectionView.serializeBinaryToWriter
    );
  }
};


/**
 * optional ElectionView election = 1;
 * @return {?proto.rvapi.ElectionView}
 */
proto.rvapi.GetViewResponse.prototype.getElection = function() {
  return /** @type{?proto.rvapi.ElectionView} */ (
    jspb.Message.getWrapperField(this, proto.rvapi.ElectionView, 1));
};


/**
 * @param {?proto.rvapi.ElectionView|undefined} value
 * @return {!proto.rvapi.GetViewResponse} returns this
*/
proto.rvapi.GetViewResponse.prototype.setElection = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rvapi.GetViewResponse} returns this
 */
proto.rvapi.GetViewResponse.prototype.clearElection = function() {
  return this.setElection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rvapi.GetViewResponse.prototype.hasElection = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.OverviewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.OverviewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.OverviewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.OverviewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.OverviewRequest}
 */
proto.rvapi.OverviewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.OverviewRequest;
  return proto.rvapi.OverviewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.OverviewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.OverviewRequest}
 */
proto.rvapi.OverviewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.OverviewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.OverviewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.OverviewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.OverviewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rvapi.OverviewResponse.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.OverviewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.OverviewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.OverviewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.OverviewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    publicElectionsList: jspb.Message.toObjectList(msg.getPublicElectionsList(),
    proto.rvapi.ElectionView.toObject, includeInstance),
    userElectionsList: jspb.Message.toObjectList(msg.getUserElectionsList(),
    proto.rvapi.Election.toObject, includeInstance),
    userVotesList: jspb.Message.toObjectList(msg.getUserVotesList(),
    proto.rvapi.ElectionView.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.OverviewResponse}
 */
proto.rvapi.OverviewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.OverviewResponse;
  return proto.rvapi.OverviewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.OverviewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.OverviewResponse}
 */
proto.rvapi.OverviewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rvapi.ElectionView;
      reader.readMessage(value,proto.rvapi.ElectionView.deserializeBinaryFromReader);
      msg.addPublicElections(value);
      break;
    case 2:
      var value = new proto.rvapi.Election;
      reader.readMessage(value,proto.rvapi.Election.deserializeBinaryFromReader);
      msg.addUserElections(value);
      break;
    case 3:
      var value = new proto.rvapi.ElectionView;
      reader.readMessage(value,proto.rvapi.ElectionView.deserializeBinaryFromReader);
      msg.addUserVotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.OverviewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.OverviewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.OverviewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.OverviewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPublicElectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.rvapi.ElectionView.serializeBinaryToWriter
    );
  }
  f = message.getUserElectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.rvapi.Election.serializeBinaryToWriter
    );
  }
  f = message.getUserVotesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.rvapi.ElectionView.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ElectionView public_elections = 1;
 * @return {!Array<!proto.rvapi.ElectionView>}
 */
proto.rvapi.OverviewResponse.prototype.getPublicElectionsList = function() {
  return /** @type{!Array<!proto.rvapi.ElectionView>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rvapi.ElectionView, 1));
};


/**
 * @param {!Array<!proto.rvapi.ElectionView>} value
 * @return {!proto.rvapi.OverviewResponse} returns this
*/
proto.rvapi.OverviewResponse.prototype.setPublicElectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.rvapi.ElectionView=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rvapi.ElectionView}
 */
proto.rvapi.OverviewResponse.prototype.addPublicElections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.rvapi.ElectionView, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.OverviewResponse} returns this
 */
proto.rvapi.OverviewResponse.prototype.clearPublicElectionsList = function() {
  return this.setPublicElectionsList([]);
};


/**
 * repeated Election user_elections = 2;
 * @return {!Array<!proto.rvapi.Election>}
 */
proto.rvapi.OverviewResponse.prototype.getUserElectionsList = function() {
  return /** @type{!Array<!proto.rvapi.Election>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rvapi.Election, 2));
};


/**
 * @param {!Array<!proto.rvapi.Election>} value
 * @return {!proto.rvapi.OverviewResponse} returns this
*/
proto.rvapi.OverviewResponse.prototype.setUserElectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.rvapi.Election=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rvapi.Election}
 */
proto.rvapi.OverviewResponse.prototype.addUserElections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.rvapi.Election, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.OverviewResponse} returns this
 */
proto.rvapi.OverviewResponse.prototype.clearUserElectionsList = function() {
  return this.setUserElectionsList([]);
};


/**
 * repeated ElectionView user_votes = 3;
 * @return {!Array<!proto.rvapi.ElectionView>}
 */
proto.rvapi.OverviewResponse.prototype.getUserVotesList = function() {
  return /** @type{!Array<!proto.rvapi.ElectionView>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rvapi.ElectionView, 3));
};


/**
 * @param {!Array<!proto.rvapi.ElectionView>} value
 * @return {!proto.rvapi.OverviewResponse} returns this
*/
proto.rvapi.OverviewResponse.prototype.setUserVotesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.rvapi.ElectionView=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rvapi.ElectionView}
 */
proto.rvapi.OverviewResponse.prototype.addUserVotes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.rvapi.ElectionView, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.OverviewResponse} returns this
 */
proto.rvapi.OverviewResponse.prototype.clearUserVotesList = function() {
  return this.setUserVotesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rvapi.CreateRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.CreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.CreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.CreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.CreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: jspb.Message.getFieldWithDefault(msg, 1, ""),
    choicesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.CreateRequest}
 */
proto.rvapi.CreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.CreateRequest;
  return proto.rvapi.CreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.CreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.CreateRequest}
 */
proto.rvapi.CreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addChoices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.CreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.CreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.CreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.CreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChoicesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string question = 1;
 * @return {string}
 */
proto.rvapi.CreateRequest.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rvapi.CreateRequest} returns this
 */
proto.rvapi.CreateRequest.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string choices = 2;
 * @return {!Array<string>}
 */
proto.rvapi.CreateRequest.prototype.getChoicesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rvapi.CreateRequest} returns this
 */
proto.rvapi.CreateRequest.prototype.setChoicesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rvapi.CreateRequest} returns this
 */
proto.rvapi.CreateRequest.prototype.addChoices = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.CreateRequest} returns this
 */
proto.rvapi.CreateRequest.prototype.clearChoicesList = function() {
  return this.setChoicesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.CreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.CreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.CreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.CreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    election: (f = msg.getElection()) && proto.rvapi.Election.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.CreateResponse}
 */
proto.rvapi.CreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.CreateResponse;
  return proto.rvapi.CreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.CreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.CreateResponse}
 */
proto.rvapi.CreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rvapi.Election;
      reader.readMessage(value,proto.rvapi.Election.deserializeBinaryFromReader);
      msg.setElection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.CreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.CreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.CreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.CreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rvapi.Election.serializeBinaryToWriter
    );
  }
};


/**
 * optional Election election = 1;
 * @return {?proto.rvapi.Election}
 */
proto.rvapi.CreateResponse.prototype.getElection = function() {
  return /** @type{?proto.rvapi.Election} */ (
    jspb.Message.getWrapperField(this, proto.rvapi.Election, 1));
};


/**
 * @param {?proto.rvapi.Election|undefined} value
 * @return {!proto.rvapi.CreateResponse} returns this
*/
proto.rvapi.CreateResponse.prototype.setElection = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rvapi.CreateResponse} returns this
 */
proto.rvapi.CreateResponse.prototype.clearElection = function() {
  return this.setElection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rvapi.CreateResponse.prototype.hasElection = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rvapi.Election.repeatedFields_ = [2,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.Election.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.Election.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.Election} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.Election.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: jspb.Message.getFieldWithDefault(msg, 1, ""),
    choicesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    key: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ballotKey: jspb.Message.getFieldWithDefault(msg, 4, ""),
    close: (f = msg.getClose()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    flagsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.Election}
 */
proto.rvapi.Election.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.Election;
  return proto.rvapi.Election.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.Election} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.Election}
 */
proto.rvapi.Election.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addChoices(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBallotKey(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setClose(value);
      break;
    case 6:
      var value = /** @type {!Array<!proto.rvapi.Election.Flag>} */ (reader.readPackedEnum());
      msg.setFlagsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.Election.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.Election.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.Election} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.Election.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChoicesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBallotKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getClose();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFlagsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.rvapi.Election.Flag = {
  UNKNOWN: 0,
  PUBLIC: 1,
  RESULTS_HIDDEN: 2
};

/**
 * optional string question = 1;
 * @return {string}
 */
proto.rvapi.Election.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rvapi.Election} returns this
 */
proto.rvapi.Election.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string choices = 2;
 * @return {!Array<string>}
 */
proto.rvapi.Election.prototype.getChoicesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rvapi.Election} returns this
 */
proto.rvapi.Election.prototype.setChoicesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rvapi.Election} returns this
 */
proto.rvapi.Election.prototype.addChoices = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.Election} returns this
 */
proto.rvapi.Election.prototype.clearChoicesList = function() {
  return this.setChoicesList([]);
};


/**
 * optional string key = 3;
 * @return {string}
 */
proto.rvapi.Election.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rvapi.Election} returns this
 */
proto.rvapi.Election.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string ballot_key = 4;
 * @return {string}
 */
proto.rvapi.Election.prototype.getBallotKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.rvapi.Election} returns this
 */
proto.rvapi.Election.prototype.setBallotKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp close = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.rvapi.Election.prototype.getClose = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.rvapi.Election} returns this
*/
proto.rvapi.Election.prototype.setClose = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rvapi.Election} returns this
 */
proto.rvapi.Election.prototype.clearClose = function() {
  return this.setClose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rvapi.Election.prototype.hasClose = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated Flag flags = 6;
 * @return {!Array<!proto.rvapi.Election.Flag>}
 */
proto.rvapi.Election.prototype.getFlagsList = function() {
  return /** @type {!Array<!proto.rvapi.Election.Flag>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<!proto.rvapi.Election.Flag>} value
 * @return {!proto.rvapi.Election} returns this
 */
proto.rvapi.Election.prototype.setFlagsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.rvapi.Election.Flag} value
 * @param {number=} opt_index
 * @return {!proto.rvapi.Election} returns this
 */
proto.rvapi.Election.prototype.addFlags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.Election} returns this
 */
proto.rvapi.Election.prototype.clearFlagsList = function() {
  return this.setFlagsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rvapi.ElectionView.repeatedFields_ = [2,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.ElectionView.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.ElectionView.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.ElectionView} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.ElectionView.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: jspb.Message.getFieldWithDefault(msg, 1, ""),
    choicesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    ballotKey: jspb.Message.getFieldWithDefault(msg, 3, ""),
    close: (f = msg.getClose()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    flagsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.ElectionView}
 */
proto.rvapi.ElectionView.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.ElectionView;
  return proto.rvapi.ElectionView.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.ElectionView} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.ElectionView}
 */
proto.rvapi.ElectionView.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addChoices(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBallotKey(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setClose(value);
      break;
    case 6:
      var value = /** @type {!Array<!proto.rvapi.Election.Flag>} */ (reader.readPackedEnum());
      msg.setFlagsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.ElectionView.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.ElectionView.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.ElectionView} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.ElectionView.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChoicesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getBallotKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClose();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFlagsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
};


/**
 * optional string question = 1;
 * @return {string}
 */
proto.rvapi.ElectionView.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rvapi.ElectionView} returns this
 */
proto.rvapi.ElectionView.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string choices = 2;
 * @return {!Array<string>}
 */
proto.rvapi.ElectionView.prototype.getChoicesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rvapi.ElectionView} returns this
 */
proto.rvapi.ElectionView.prototype.setChoicesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rvapi.ElectionView} returns this
 */
proto.rvapi.ElectionView.prototype.addChoices = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.ElectionView} returns this
 */
proto.rvapi.ElectionView.prototype.clearChoicesList = function() {
  return this.setChoicesList([]);
};


/**
 * optional string ballot_key = 3;
 * @return {string}
 */
proto.rvapi.ElectionView.prototype.getBallotKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.rvapi.ElectionView} returns this
 */
proto.rvapi.ElectionView.prototype.setBallotKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp close = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.rvapi.ElectionView.prototype.getClose = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.rvapi.ElectionView} returns this
*/
proto.rvapi.ElectionView.prototype.setClose = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rvapi.ElectionView} returns this
 */
proto.rvapi.ElectionView.prototype.clearClose = function() {
  return this.setClose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rvapi.ElectionView.prototype.hasClose = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated Election.Flag flags = 6;
 * @return {!Array<!proto.rvapi.Election.Flag>}
 */
proto.rvapi.ElectionView.prototype.getFlagsList = function() {
  return /** @type {!Array<!proto.rvapi.Election.Flag>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<!proto.rvapi.Election.Flag>} value
 * @return {!proto.rvapi.ElectionView} returns this
 */
proto.rvapi.ElectionView.prototype.setFlagsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.rvapi.Election.Flag} value
 * @param {number=} opt_index
 * @return {!proto.rvapi.ElectionView} returns this
 */
proto.rvapi.ElectionView.prototype.addFlags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.ElectionView} returns this
 */
proto.rvapi.ElectionView.prototype.clearFlagsList = function() {
  return this.setFlagsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.SetClose.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.SetClose.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.SetClose} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.SetClose.toObject = function(includeInstance, msg) {
  var f, obj = {
    close: (f = msg.getClose()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.SetClose}
 */
proto.rvapi.SetClose.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.SetClose;
  return proto.rvapi.SetClose.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.SetClose} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.SetClose}
 */
proto.rvapi.SetClose.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setClose(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.SetClose.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.SetClose.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.SetClose} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.SetClose.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClose();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp close = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.rvapi.SetClose.prototype.getClose = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.rvapi.SetClose} returns this
*/
proto.rvapi.SetClose.prototype.setClose = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rvapi.SetClose} returns this
 */
proto.rvapi.SetClose.prototype.clearClose = function() {
  return this.setClose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rvapi.SetClose.prototype.hasClose = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rvapi.ModifyFlags.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.ModifyFlags.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.ModifyFlags.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.ModifyFlags} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.ModifyFlags.toObject = function(includeInstance, msg) {
  var f, obj = {
    addList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    removeList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.ModifyFlags}
 */
proto.rvapi.ModifyFlags.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.ModifyFlags;
  return proto.rvapi.ModifyFlags.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.ModifyFlags} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.ModifyFlags}
 */
proto.rvapi.ModifyFlags.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<!proto.rvapi.Election.Flag>} */ (reader.readPackedEnum());
      msg.setAddList(value);
      break;
    case 2:
      var value = /** @type {!Array<!proto.rvapi.Election.Flag>} */ (reader.readPackedEnum());
      msg.setRemoveList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.ModifyFlags.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.ModifyFlags.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.ModifyFlags} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.ModifyFlags.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getRemoveList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * repeated Election.Flag add = 1;
 * @return {!Array<!proto.rvapi.Election.Flag>}
 */
proto.rvapi.ModifyFlags.prototype.getAddList = function() {
  return /** @type {!Array<!proto.rvapi.Election.Flag>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.rvapi.Election.Flag>} value
 * @return {!proto.rvapi.ModifyFlags} returns this
 */
proto.rvapi.ModifyFlags.prototype.setAddList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.rvapi.Election.Flag} value
 * @param {number=} opt_index
 * @return {!proto.rvapi.ModifyFlags} returns this
 */
proto.rvapi.ModifyFlags.prototype.addAdd = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.ModifyFlags} returns this
 */
proto.rvapi.ModifyFlags.prototype.clearAddList = function() {
  return this.setAddList([]);
};


/**
 * repeated Election.Flag remove = 2;
 * @return {!Array<!proto.rvapi.Election.Flag>}
 */
proto.rvapi.ModifyFlags.prototype.getRemoveList = function() {
  return /** @type {!Array<!proto.rvapi.Election.Flag>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.rvapi.Election.Flag>} value
 * @return {!proto.rvapi.ModifyFlags} returns this
 */
proto.rvapi.ModifyFlags.prototype.setRemoveList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.rvapi.Election.Flag} value
 * @param {number=} opt_index
 * @return {!proto.rvapi.ModifyFlags} returns this
 */
proto.rvapi.ModifyFlags.prototype.addRemove = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.ModifyFlags} returns this
 */
proto.rvapi.ModifyFlags.prototype.clearRemoveList = function() {
  return this.setRemoveList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rvapi.UpdateRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.UpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.UpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.UpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.UpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operationsList: jspb.Message.toObjectList(msg.getOperationsList(),
    proto.rvapi.UpdateRequest.Operation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.UpdateRequest}
 */
proto.rvapi.UpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.UpdateRequest;
  return proto.rvapi.UpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.UpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.UpdateRequest}
 */
proto.rvapi.UpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.rvapi.UpdateRequest.Operation;
      reader.readMessage(value,proto.rvapi.UpdateRequest.Operation.deserializeBinaryFromReader);
      msg.addOperations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.UpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.UpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.UpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.UpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.rvapi.UpdateRequest.Operation.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rvapi.UpdateRequest.Operation.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.rvapi.UpdateRequest.Operation.OperationCase = {
  OPERATION_NOT_SET: 0,
  SET_CLOSE: 1,
  MODIFY_FLAGS: 2
};

/**
 * @return {proto.rvapi.UpdateRequest.Operation.OperationCase}
 */
proto.rvapi.UpdateRequest.Operation.prototype.getOperationCase = function() {
  return /** @type {proto.rvapi.UpdateRequest.Operation.OperationCase} */(jspb.Message.computeOneofCase(this, proto.rvapi.UpdateRequest.Operation.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.UpdateRequest.Operation.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.UpdateRequest.Operation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.UpdateRequest.Operation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.UpdateRequest.Operation.toObject = function(includeInstance, msg) {
  var f, obj = {
    setClose: (f = msg.getSetClose()) && proto.rvapi.SetClose.toObject(includeInstance, f),
    modifyFlags: (f = msg.getModifyFlags()) && proto.rvapi.ModifyFlags.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.UpdateRequest.Operation}
 */
proto.rvapi.UpdateRequest.Operation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.UpdateRequest.Operation;
  return proto.rvapi.UpdateRequest.Operation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.UpdateRequest.Operation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.UpdateRequest.Operation}
 */
proto.rvapi.UpdateRequest.Operation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rvapi.SetClose;
      reader.readMessage(value,proto.rvapi.SetClose.deserializeBinaryFromReader);
      msg.setSetClose(value);
      break;
    case 2:
      var value = new proto.rvapi.ModifyFlags;
      reader.readMessage(value,proto.rvapi.ModifyFlags.deserializeBinaryFromReader);
      msg.setModifyFlags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.UpdateRequest.Operation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.UpdateRequest.Operation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.UpdateRequest.Operation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.UpdateRequest.Operation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSetClose();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rvapi.SetClose.serializeBinaryToWriter
    );
  }
  f = message.getModifyFlags();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.rvapi.ModifyFlags.serializeBinaryToWriter
    );
  }
};


/**
 * optional SetClose set_close = 1;
 * @return {?proto.rvapi.SetClose}
 */
proto.rvapi.UpdateRequest.Operation.prototype.getSetClose = function() {
  return /** @type{?proto.rvapi.SetClose} */ (
    jspb.Message.getWrapperField(this, proto.rvapi.SetClose, 1));
};


/**
 * @param {?proto.rvapi.SetClose|undefined} value
 * @return {!proto.rvapi.UpdateRequest.Operation} returns this
*/
proto.rvapi.UpdateRequest.Operation.prototype.setSetClose = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.rvapi.UpdateRequest.Operation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rvapi.UpdateRequest.Operation} returns this
 */
proto.rvapi.UpdateRequest.Operation.prototype.clearSetClose = function() {
  return this.setSetClose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rvapi.UpdateRequest.Operation.prototype.hasSetClose = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ModifyFlags modify_flags = 2;
 * @return {?proto.rvapi.ModifyFlags}
 */
proto.rvapi.UpdateRequest.Operation.prototype.getModifyFlags = function() {
  return /** @type{?proto.rvapi.ModifyFlags} */ (
    jspb.Message.getWrapperField(this, proto.rvapi.ModifyFlags, 2));
};


/**
 * @param {?proto.rvapi.ModifyFlags|undefined} value
 * @return {!proto.rvapi.UpdateRequest.Operation} returns this
*/
proto.rvapi.UpdateRequest.Operation.prototype.setModifyFlags = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.rvapi.UpdateRequest.Operation.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rvapi.UpdateRequest.Operation} returns this
 */
proto.rvapi.UpdateRequest.Operation.prototype.clearModifyFlags = function() {
  return this.setModifyFlags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rvapi.UpdateRequest.Operation.prototype.hasModifyFlags = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.rvapi.UpdateRequest.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rvapi.UpdateRequest} returns this
 */
proto.rvapi.UpdateRequest.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Operation operations = 2;
 * @return {!Array<!proto.rvapi.UpdateRequest.Operation>}
 */
proto.rvapi.UpdateRequest.prototype.getOperationsList = function() {
  return /** @type{!Array<!proto.rvapi.UpdateRequest.Operation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.rvapi.UpdateRequest.Operation, 2));
};


/**
 * @param {!Array<!proto.rvapi.UpdateRequest.Operation>} value
 * @return {!proto.rvapi.UpdateRequest} returns this
*/
proto.rvapi.UpdateRequest.prototype.setOperationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.rvapi.UpdateRequest.Operation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.rvapi.UpdateRequest.Operation}
 */
proto.rvapi.UpdateRequest.prototype.addOperations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.rvapi.UpdateRequest.Operation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.UpdateRequest} returns this
 */
proto.rvapi.UpdateRequest.prototype.clearOperationsList = function() {
  return this.setOperationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    election: (f = msg.getElection()) && proto.rvapi.Election.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.UpdateResponse}
 */
proto.rvapi.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.UpdateResponse;
  return proto.rvapi.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.UpdateResponse}
 */
proto.rvapi.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.rvapi.Election;
      reader.readMessage(value,proto.rvapi.Election.deserializeBinaryFromReader);
      msg.setElection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.rvapi.Election.serializeBinaryToWriter
    );
  }
};


/**
 * optional Election election = 1;
 * @return {?proto.rvapi.Election}
 */
proto.rvapi.UpdateResponse.prototype.getElection = function() {
  return /** @type{?proto.rvapi.Election} */ (
    jspb.Message.getWrapperField(this, proto.rvapi.Election, 1));
};


/**
 * @param {?proto.rvapi.Election|undefined} value
 * @return {!proto.rvapi.UpdateResponse} returns this
*/
proto.rvapi.UpdateResponse.prototype.setElection = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.rvapi.UpdateResponse} returns this
 */
proto.rvapi.UpdateResponse.prototype.clearElection = function() {
  return this.setElection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rvapi.UpdateResponse.prototype.hasElection = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rvapi.VoteRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.VoteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.VoteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.VoteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.VoteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ballotKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    choicesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.VoteRequest}
 */
proto.rvapi.VoteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.VoteRequest;
  return proto.rvapi.VoteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.VoteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.VoteRequest}
 */
proto.rvapi.VoteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBallotKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addChoices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.VoteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.VoteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.VoteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.VoteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBallotKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChoicesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string ballot_key = 1;
 * @return {string}
 */
proto.rvapi.VoteRequest.prototype.getBallotKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.rvapi.VoteRequest} returns this
 */
proto.rvapi.VoteRequest.prototype.setBallotKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.rvapi.VoteRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.rvapi.VoteRequest} returns this
 */
proto.rvapi.VoteRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string choices = 3;
 * @return {!Array<string>}
 */
proto.rvapi.VoteRequest.prototype.getChoicesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.rvapi.VoteRequest} returns this
 */
proto.rvapi.VoteRequest.prototype.setChoicesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.rvapi.VoteRequest} returns this
 */
proto.rvapi.VoteRequest.prototype.addChoices = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.rvapi.VoteRequest} returns this
 */
proto.rvapi.VoteRequest.prototype.clearChoicesList = function() {
  return this.setChoicesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rvapi.VoteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.rvapi.VoteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rvapi.VoteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.VoteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rvapi.VoteResponse}
 */
proto.rvapi.VoteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rvapi.VoteResponse;
  return proto.rvapi.VoteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rvapi.VoteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rvapi.VoteResponse}
 */
proto.rvapi.VoteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rvapi.VoteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rvapi.VoteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rvapi.VoteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rvapi.VoteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.rvapi);
